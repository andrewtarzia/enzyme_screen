#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Distributed under the terms of the MIT License.

"""
Module for predicting the Melting temperature and Tm_index of an AA
sequence.

Based on paper: https://doi.org/10.1016/j.compbiolchem.2009.10.002

Author: Andrew Tarzia

Date Created: 31 Oct 2018

"""
import numpy as np


def TM_matrix(AA1, AA2):
    """Returns pair-wise interaction terms for dipeptides AA1-AA2 from
    ordered 20x20 matrix.

    From http://tm.life.nthu.edu.tw/tm-matrix.htm

    The row denotes 1st amino acid, and the column denotes 2nd amino
    acid.

    """
    tm_mat = np.array([
        [100, 100, 48.5960346, 41.7977528, 100, 100, 100, 100, 126.0671, 129.5372051, 150.0164204, 58.77509007, 100, 36.02315288, 54.3698565, 100, 141.1021937, 167.790262, 100, 86.9914594],
        [28.2147316, 100, -78.0249167, 29.3333333, 100, 161.4134276, 100, 32.07865169, 100, 100, 100, 100, 255.1955307, 100, 100, 100, -62.0952381, 100, 100, 100],
        [100, 100, 100, 100, 142.1040724, -12.0777662, 24.7453954, 55.84614809, 100, 134.1185483, 25.0989011, 52.44546498, 100, 164.663585, 100, 142.768015, 48.00336276, 139.755245, -99.0004346, 100],
        [100, 26.68224299, 100, 109.791362, 100, 178.1683036, 100, 100, 100, 64.40677966, 101.6030569, 143.3672758, 62.6063802, 54.54545455, 142.094785, 83.1481648, 115.1290683, 100, 100, 63.52915],
        [100, 167.9411765, 100, 100, 3.448627691, 100, 248.363712, 87.22926456, 153.083578, 16.66033846, 100, 100, 3.448627691, 168.4113866, 100, 143.94958, 100, 26.2626263, 196.8060662, 100],
        [100, 100, 100, 174.4, 107.3376752, 124.0544894, 100, 149.6248064, 66.464135, 105.4107419, 51.88288743, 137.924812, 100, -15.2530919, 61.3333333, 138.354366, 100, 2.2, 151.3250883, 67.2555948],
        [100, 402.1126761, 93.0147371, 100, 177.4026512, 100, 100, -58.8623574, 24.4941732, 33.41404358, 100, 36.01009039, 188.7009206, 100, 28.5523794, 183.822938, 100, 100, 100, 100],
        [100, -43.0022075, 35.2527407, 100, -37.3786306, 136.2119205, 243.978478, 100, 100, 100, 100, 100, 100, 100, 100, 100, 157.7638607, 100, 100, 152.755484],
        [100, 28.98477157, 100, 100, 105.2914691, 100, 100, 100, 141.245587, 47.4719302, 100, 165.0772501, 58.29339534, 100, 136.990155, 57.5237504, 100, 131.748962, 100, 120.531026],
        [100, 56.34868421, 100, 131.655804, 100, 63.71582667, 100, 100, 100, 133.45741, 32.19924812, 100, 100, 54.23728814, 100, 100, 100, 100, 100, 172.78976],
        [164.45822, 100, 225.89011, 23.4482759, 100, 152.5517241, 100, 100, 100, 100, -209.036861, 219.1471215, 100, 100, 100, 46.6122449, -37.2413793, 37.0779221, 100, 100],
        [100, -75.8897243, 100, 101.992004, 100, 100, 100, 100, 3.49133658, 100, 164.3246046, -2.24998587, 100, 116.4353653, 166.413495, 100, 100, 161.203008, 100, 88.0850595],
        [153.997303, 159.4972067, 100, 100, 100, 61.01010101, 100, 100, 100, 115.8442037, 100, 100, 139.0031522, 168.4113866, 33.9757363, 100, 52.29416613, 88.6338243, 100, 100],
        [100, -8.48484848, 146.995378, 156.363636, 42.05693297, 132.4094523, 188.490317, 60.14747191, 100, 95.10899866, 100, 100, 100, 252.6586107, 15.8376479, 63.7276786, 100, 43.6363636, -40.5594406, 148.697917],
        [62.1369788, 100, 139.736347, 66.3108997, 100, 100, 25.8503401, 16.33554084, 136.990155, 100, 100, 100, 158.5534363, 47.51294379, 143.94454, 67.5739645, 100, 93.577192, 100, 100],
        [68.757526, 100, 158.959707, 68.611482, 148.838074, 100, 88.5218762, 100, 100, 135.6140168, 100, 100, 100, 100, 100, 44.6309609, 100, 55.6168831, 100, 100],
        [129.112493, 100, 100, 105.986211, 100, 100, 100, 100, 34.1169379, 100, 100, 100, 62.75299936, 100, 100, 100, 100, 100, -26.8131868, 100],
        [100, 173.030303, 100, 100, 100, 73.3697398, 24.4897959, 100, 173.68989, 158.2031313, 100, 100, 43.63636364, 100, 53.3333333, 100, 87.30813995, 146.25, 100, 41.1976912],
        [100, -152.820513, 100, 25.0146028, 100, 151.3250883, 100, 210.5161517, 100, -69.1003911, 305.8928571, 100, -83.9248876, 100, 158.376479, 25.4910714, 100, 100, 100, -22.8340081],
        [100, 100, 150.900981, 139.76413, 100, 11.70526316, 191.482227, 100, 100, 100, 100, 88.08505947, 197.4727321, 212.4255952, 100, 40.0516629, 100, 30.8982684, 100, 21.579743]
    ])
    # define the index associated with a residue
    # using single letter code
    res_idx = {
        'A': 0, 'C': 1, 'D': 2, 'E': 3, 'F': 4, 'G': 5, 'H': 6, 'I': 7,
        'K': 8, 'L': 9, 'M': 10, 'N': 11, 'P': 12, 'Q': 13, 'R': 14,
        'S': 15, 'T': 16, 'V': 17, 'W': 18, 'Y': 19
    }

    return tm_mat[res_idx[AA1]][res_idx[AA2]]


def calculate_TM_index(seq_string):
    """Calculate melting temperature index of an amino acid sequence (str).

    """
    seq_string = seq_string.replace(' ', '')
    L = len(seq_string)
    if L == 0:
        print('sequence string was length 0')
        return 0
    P_index = 0
    for i, j in enumerate(seq_string[:-1]):
        P_index += TM_matrix(AA1=j, AA2=seq_string[i+1])
    front_term = P_index
    front_term = front_term * (100/L)
    TI = (front_term - 9372) / (398)
    return TI
